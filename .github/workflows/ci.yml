name: CI

on:
  push:
    branches:
      - main
      - release-*
  pull_request:
    branches:
      - main
      - release-*

concurrency:
  # For pull requests, cancel all currently-running jobs for this workflow
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  infra:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install dependencies & browsers
      run: |
        python -m pip install --upgrade pip
        pip install -r local-requirements.txt
        pip install -e .
        python -m build --wheel
        python -m playwright install --with-deps
    - name: Lint
      run: pre-commit run --show-diff-on-failure --color=always --all-files
    - name: Generate APIs
      run: bash scripts/update_api.sh
    - name: Verify generated API is up to date
      run: git diff --exit-code

  build:
    name: Build
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10']
        browser: [chromium, firefox, webkit]
        include:
        - os: windows-latest
          python-version: '3.11'
          browser: chromium
        - os: macos-latest
          python-version: '3.11'
          browser: chromium
        - os: ubuntu-latest
          python-version: '3.11'
          browser: chromium
        - os: windows-latest
          python-version: '3.12'
          browser: chromium
        - os: macos-latest
          python-version: '3.12'
          browser: chromium
        - os: ubuntu-latest
          python-version: '3.12'
          browser: chromium
        - os: windows-latest
          python-version: '3.13'
          browser: chromium
        - os: macos-latest
          python-version: '3.13'
          browser: chromium
        - os: ubuntu-latest
          python-version: '3.13'
          browser: chromium
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies & browsers
      run: |
        python -m pip install --upgrade pip
        pip install -r local-requirements.txt
        pip install -e .
        python -m build --wheel
        python -m playwright install --with-deps ${{ matrix.browser }}
    - name: Common Tests
      run: pytest tests/common --browser=${{ matrix.browser }} --timeout 90
    - name: Test Reference count
      run: pytest tests/test_reference_count_async.py --browser=${{ matrix.browser }}
    - name: Test Wheel Installation
      run: pytest tests/test_installation.py --browser=${{ matrix.browser }}
    - name: Test Sync API
      if: matrix.os != 'ubuntu-latest'
      run: pytest tests/sync --browser=${{ matrix.browser }} --timeout 90
    - name: Test Sync API
      if: matrix.os == 'ubuntu-latest'
      run: xvfb-run pytest tests/sync --browser=${{ matrix.browser }} --timeout 90
    - name: Test Async API
      if: matrix.os != 'ubuntu-latest'
      run: pytest tests/async --browser=${{ matrix.browser }} --timeout 90
    - name: Test Async API
      if: matrix.os == 'ubuntu-latest'
      run: xvfb-run pytest tests/async --browser=${{ matrix.browser }} --timeout 90

  test-stable:
    name: Stable
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        browser-channel: [chrome]
        include:
        - os: windows-latest
          browser-channel: msedge
        - os: macos-latest
          browser-channel: msedge
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install dependencies & browsers
      run: |
        python -m pip install --upgrade pip
        pip install -r local-requirements.txt
        pip install -e .
        python -m build --wheel
        python -m playwright install ${{ matrix.browser-channel }} --with-deps
    - name: Common Tests
      run: pytest tests/common --browser=chromium --browser-channel=${{ matrix.browser-channel }} --timeout 90
    - name: Test Sync API
      if: matrix.os != 'ubuntu-latest'
      run: pytest tests/sync --browser=chromium --browser-channel=${{ matrix.browser-channel }} --timeout 90
    - name: Test Sync API
      if: matrix.os == 'ubuntu-latest'
      run: xvfb-run pytest tests/sync --browser=chromium --browser-channel=${{ matrix.browser-channel }} --timeout 90
    - name: Test Async API
      if: matrix.os != 'ubuntu-latest'
      run: pytest tests/async --browser=chromium --browser-channel=${{ matrix.browser-channel }} --timeout 90
    - name: Test Async API
      if: matrix.os == 'ubuntu-latest'
      run: xvfb-run pytest tests/async --browser=chromium --browser-channel=${{ matrix.browser-channel }} --timeout 90

  build-conda:
    name: Conda Build
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-13, windows-2019]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: 3.9
          channels: conda-forge
      - name: Prepare
        run: conda install conda-build conda-verify
      - name: Build
        run: conda build .

  test_examples:
    name: Examples
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: examples/todomvc/
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies & browsers
      run: |
        pip install -r requirements.txt
        python -m playwright install --with-deps chromium
    - name: Common Tests
      run: pytest
